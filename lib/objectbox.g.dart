// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'domain/models/loyaltyProgramModel.dart';
import 'domain/models/rewardModel.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 3401710457310357716),
      name: 'RewardModel',
      lastPropertyId: const obx_int.IdUid(10, 5774164378543038065),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7595346860182445469),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1315264941201472981),
            name: 'type',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4156855547960980391),
            name: 'discountValue',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6119365577983705815),
            name: 'discountValueType',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7333605600765203908),
            name: 'item',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 9193741409764690578),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 482995528713180466),
            name: 'rewardCost',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 4538394185443530244),
            name: 'minimumPurchase',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 7190404437975898656),
            name: 'uid',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(1, 8670166263391842496)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 5774164378543038065),
            name: 'loyaltyProgramId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(2, 5939902998660536462),
            relationTarget: 'LoyaltyProgramModel')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 1173935753394898722),
      name: 'LoyaltyProgramModel',
      lastPropertyId: const obx_int.IdUid(7, 2241679788063526819),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6716148227055326269),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1743111344690139695),
            name: 'uid',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(3, 7454363406861329924)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 165063373242491864),
            name: 'type',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 544434251751493668),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7118891231732692149),
            name: 'pointValue',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3007625745844823324),
            name: 'numberHoles',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2241679788063526819),
            name: 'winningNumbers',
            type: 24,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'rewards',
            srcEntity: 'RewardModel',
            srcField: 'loyaltyProgram')
      ])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 1173935753394898722),
      lastIndexId: const obx_int.IdUid(3, 7454363406861329924),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    RewardModel: obx_int.EntityDefinition<RewardModel>(
        model: _entities[0],
        toOneRelations: (RewardModel object) => [object.loyaltyProgram],
        toManyRelations: (RewardModel object) => {},
        getId: (RewardModel object) => object.id,
        setId: (RewardModel object, int id) {
          object.id = id;
        },
        objectToFB: (RewardModel object, fb.Builder fbb) {
          final typeOffset =
              object.type == null ? null : fbb.writeString(object.type!);
          final discountValueTypeOffset = object.discountValueType == null
              ? null
              : fbb.writeString(object.discountValueType!);
          final itemOffset =
              object.item == null ? null : fbb.writeString(object.item!);
          final descriptionOffset = object.description == null
              ? null
              : fbb.writeString(object.description!);
          final uidOffset =
              object.uid == null ? null : fbb.writeString(object.uid!);
          fbb.startTable(11);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, typeOffset);
          fbb.addInt64(2, object.discountValue);
          fbb.addOffset(3, discountValueTypeOffset);
          fbb.addOffset(4, itemOffset);
          fbb.addOffset(5, descriptionOffset);
          fbb.addInt64(6, object.rewardCost);
          fbb.addInt64(7, object.minimumPurchase);
          fbb.addOffset(8, uidOffset);
          fbb.addInt64(9, object.loyaltyProgram.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final uidParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 20);
          final typeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final discountValueParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final discountValueTypeParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 10);
          final itemParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 14);
          final rewardCostParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 16);
          final minimumPurchaseParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final object = RewardModel(
              id: idParam,
              uid: uidParam,
              type: typeParam,
              discountValue: discountValueParam,
              discountValueType: discountValueTypeParam,
              item: itemParam,
              description: descriptionParam,
              rewardCost: rewardCostParam,
              minimumPurchase: minimumPurchaseParam);
          object.loyaltyProgram.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          object.loyaltyProgram.attach(store);
          return object;
        }),
    LoyaltyProgramModel: obx_int.EntityDefinition<LoyaltyProgramModel>(
        model: _entities[1],
        toOneRelations: (LoyaltyProgramModel object) => [],
        toManyRelations: (LoyaltyProgramModel object) => {
              obx_int.RelInfo<RewardModel>.toOneBacklink(10, object.id!,
                      (RewardModel srcObject) => srcObject.loyaltyProgram):
                  object.rewards
            },
        getId: (LoyaltyProgramModel object) => object.id,
        setId: (LoyaltyProgramModel object, int id) {
          object.id = id;
        },
        objectToFB: (LoyaltyProgramModel object, fb.Builder fbb) {
          final uidOffset =
              object.uid == null ? null : fbb.writeString(object.uid!);
          final typeOffset =
              object.type == null ? null : fbb.writeString(object.type!);
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          final pointValueOffset = object.pointValue == null
              ? null
              : fbb.writeString(object.pointValue!);
          final winningNumbersOffset = object.winningNumbers == null
              ? null
              : fbb.writeListInt16(object.winningNumbers!);
          fbb.startTable(8);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, uidOffset);
          fbb.addOffset(2, typeOffset);
          fbb.addOffset(3, nameOffset);
          fbb.addOffset(4, pointValueOffset);
          fbb.addInt64(5, object.numberHoles);
          fbb.addOffset(6, winningNumbersOffset);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);
          final uidParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final typeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final pointValueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final numberHolesParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 14);
          final winningNumbersParam =
              const fb.ListReader<int>(fb.Int16Reader(), lazy: false)
                  .vTableGetNullable(buffer, rootOffset, 16);
          final object = LoyaltyProgramModel(
              id: idParam,
              uid: uidParam,
              type: typeParam,
              name: nameParam,
              pointValue: pointValueParam,
              numberHoles: numberHolesParam,
              winningNumbers: winningNumbersParam);
          obx_int.InternalToManyAccess.setRelInfo<LoyaltyProgramModel>(
              object.rewards,
              store,
              obx_int.RelInfo<RewardModel>.toOneBacklink(10, object.id!,
                  (RewardModel srcObject) => srcObject.loyaltyProgram));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [RewardModel] entity fields to define ObjectBox queries.
class RewardModel_ {
  /// See [RewardModel.id].
  static final id =
      obx.QueryIntegerProperty<RewardModel>(_entities[0].properties[0]);

  /// See [RewardModel.type].
  static final type =
      obx.QueryStringProperty<RewardModel>(_entities[0].properties[1]);

  /// See [RewardModel.discountValue].
  static final discountValue =
      obx.QueryIntegerProperty<RewardModel>(_entities[0].properties[2]);

  /// See [RewardModel.discountValueType].
  static final discountValueType =
      obx.QueryStringProperty<RewardModel>(_entities[0].properties[3]);

  /// See [RewardModel.item].
  static final item =
      obx.QueryStringProperty<RewardModel>(_entities[0].properties[4]);

  /// See [RewardModel.description].
  static final description =
      obx.QueryStringProperty<RewardModel>(_entities[0].properties[5]);

  /// See [RewardModel.rewardCost].
  static final rewardCost =
      obx.QueryIntegerProperty<RewardModel>(_entities[0].properties[6]);

  /// See [RewardModel.minimumPurchase].
  static final minimumPurchase =
      obx.QueryIntegerProperty<RewardModel>(_entities[0].properties[7]);

  /// See [RewardModel.uid].
  static final uid =
      obx.QueryStringProperty<RewardModel>(_entities[0].properties[8]);

  /// See [RewardModel.loyaltyProgram].
  static final loyaltyProgram =
      obx.QueryRelationToOne<RewardModel, LoyaltyProgramModel>(
          _entities[0].properties[9]);
}

/// [LoyaltyProgramModel] entity fields to define ObjectBox queries.
class LoyaltyProgramModel_ {
  /// See [LoyaltyProgramModel.id].
  static final id =
      obx.QueryIntegerProperty<LoyaltyProgramModel>(_entities[1].properties[0]);

  /// See [LoyaltyProgramModel.uid].
  static final uid =
      obx.QueryStringProperty<LoyaltyProgramModel>(_entities[1].properties[1]);

  /// See [LoyaltyProgramModel.type].
  static final type =
      obx.QueryStringProperty<LoyaltyProgramModel>(_entities[1].properties[2]);

  /// See [LoyaltyProgramModel.name].
  static final name =
      obx.QueryStringProperty<LoyaltyProgramModel>(_entities[1].properties[3]);

  /// See [LoyaltyProgramModel.pointValue].
  static final pointValue =
      obx.QueryStringProperty<LoyaltyProgramModel>(_entities[1].properties[4]);

  /// See [LoyaltyProgramModel.numberHoles].
  static final numberHoles =
      obx.QueryIntegerProperty<LoyaltyProgramModel>(_entities[1].properties[5]);

  /// See [LoyaltyProgramModel.winningNumbers].
  static final winningNumbers =
      obx.QueryIntegerVectorProperty<LoyaltyProgramModel>(
          _entities[1].properties[6]);

  /// see [LoyaltyProgramModel.rewards]
  static final rewards =
      obx.QueryBacklinkToMany<RewardModel, LoyaltyProgramModel>(
          RewardModel_.loyaltyProgram);
}

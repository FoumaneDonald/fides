name: Prod Build & Release

on:
  # Runs this action when you push on master
  push:
    branches:
      - master
  # Runs this when a PR against master is created
  pull_request:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  version_and_release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.PAT }}
          release-type: dart
          target-branch: master

  build:
    # Depends on the previous job
    needs: version_and_release
    # Only run this job if release-please actually created a new release
    if: ${{ needs.version_and_release.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest

    steps:
      # Clones the project on the machine
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # Installs flutter and related dependency on this machine
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.29.3'
          cache: true

      # Fetches proj dependencies from pub
      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Create .prod.env file  # Create .dev.env if you have one
        run: |
          echo "${{ secrets.PROD_ENV }}" > lib/.prod.env

      - name: Build APK (prod)
        run: flutter build apk --flavor prod --dart-define=ENV=prod --build-number=${{ github.run_number }}

      - name: Set Tag from Branch Name
        id: tag
        run: echo "TAG_NAME=prod-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Upload APK to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-prod-release.apk" # Correct path for release APK
          tag: ${{ needs.version_and_release.outputs.tag_name }}
          token: ${{ secrets.PAT }}
          # Allow updating the release, as release-please created it, and we're just adding an artifact.
          allowUpdates: true